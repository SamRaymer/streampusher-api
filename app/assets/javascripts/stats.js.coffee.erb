# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$('[data-controller=stats][data-action=index]').ready ->
  listens = $("#app-data").data("listens")
  mymap = L.map('map').setView([51.505, -0.09], 13)
  if listens.length
    for listen in listens
      marker = L.marker([listen.lat, listen.long]).addTo(mymap)

  new Calendar({
    element: $('.daterange--double'),
    earliest_date: '2000-01-1',
    latest_date: moment(),
    start_date: '2015-05-01',
    end_date: '2015-05-31',
    callback: () ->
      start = moment(this.start_date).format()
      end = moment(this.end_date).format()
      window.location = "/stats?start_at=#{encodeURIComponent(start)}&end_at=#{encodeURIComponent(end)}"
  })

  ctx = document.getElementById("totalSessionsChart").getContext("2d")
  options = {
    legend: {
      display: false
    },
    scales: {
      yAxes: [{
        ticks: {
          min: 0,
          beginAtZero: true
          callback: (value, index, values) ->
            if (Math.floor(value) == value)
              return value
        }
      }]
    }
  }

  start_at = $("#app-data").data("start-at")
  end_at = $("#app-data").data("start-at")
  $.get "/listens.json?start_at=#{encodeURIComponent(start_at)}&end_at=#{encodeURIComponent(end_at)}", (listens) ->
    data = {
      labels: _.keys(listens)
      datasets: [
          {
              label: "listens",
              fillColor: "rgba(220,220,220,0.2)",
              strokeColor: "rgba(220,220,220,1)",
              pointColor: "rgba(220,220,220,1)",
              pointStrokeColor: "#fff",
              pointHighlightFill: "#fff",
              pointHighlightStroke: "rgba(220,220,220,1)",
              data: _.values(listens)
          },
      ]

    }
    listensChart = new Chart(ctx, { type: 'line', data: data, options: options })
