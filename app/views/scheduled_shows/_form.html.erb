<%= simple_form_for @scheduled_show, html: {class: 'form-horizontal'}, remote: true do |f| %>
  <%= f.input :radio_id, as: :hidden, input_html: { value: @current_radio.id } %>
  <%= f.input :title %>
  <%= f.input :image, as: :file %>
  <%= f.input :playlist_id, collection: @current_radio.playlists, label_method: :name, value_method: :id, include_blank: false %>
  <%= f.simple_fields_for :scheduled_show_performers do |g| %>
    <%= g.input :user_id, collection: @current_radio.djs, label_method: :username, value_method: :id, label: 'Host' %>
  <% end %>
  <%= f.input :is_live, label: "Live Broadcast" %>
  <%= f.input :is_guest, label: "Guest Host" %>
  <%= f.input :guest %>
  <div class="note">
    Your current default time zone is set to <%= current_user.time_zone %>. You can change it by <%= link_to 'editing your profile.', "/users/edit" %>
  </div>
  <% zone = @scheduled_show.time_zone || Time.zone %>
  <% Time.use_zone(zone) do %>
    <%= f.input :start_at, minute_step: 15, default: Date.parse(params[:start_at] || Time.now.to_s), label: "Start at (#{zone})" %>
    <%= f.input :end_at, minute_step: 15, default: Date.parse(params[:start_at] || (Time.now+2.hours).to_s), label: "End at (#{zone})" %>
  <% end %>
  <br/>
  <%= f.select :time_zone, ActiveSupport::TimeZone.all.sort.collect{|m| [m.to_s.split(") ").reverse.join(" -- ").concat(")"), m.name]}, { selected: @scheduled_show.time_zone || current_user.time_zone }, class: 'chosen-select' %>

  <br/>
  You can format the description using <a href="https://guides.github.com/features/mastering-markdown/" target="_blank">Markdown</a>.
  <%= f.input :description, input_html: { cols: 70, rows: 5 }  %>
  <%= f.input :recurring_interval, label: "Repeat", as: :select, collection: ScheduledShow.recurring_interval_attributes_for_select, include_blank: false %>
  <% if @scheduled_show.persisted? && (@scheduled_show.recurring? || @scheduled_show.recurrence?) %>
    <%= f.input :update_all_recurrences, label: "You are updating a repeating show. Do you want to update all occurences of this show?", as: :select, collection: ScheduledShow.update_all_recurrences_attributes_for_select, include_blank: false %>
  <% end %>

  <% if @scheduled_show.persisted? %>
    <%= f.submit 'Update show', class: 'btn btn-success', "data-disable-with" => "sending..." %>
  <% else %>
    <%= f.submit 'Schedule show', class: 'btn btn-success', "data-disable-with" => "sending..." %>
  <% end %>
<% end %>
